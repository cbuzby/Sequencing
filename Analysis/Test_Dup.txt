/*  GATK4 Variant Calling Pipeline
 *  Usage: nextflow run /path/to/main.nf
 *
 *  Author: Mohammed Khalfan < mkhalfan@nyu.edu > adapted by Cassandra Buzby
 *  NYU Center for Genetics and System Biology 2020
 */

// Setting some defaults here,
// can be overridden in config or via command line
nextflow.enable.dsl=2
params.out = "${params.outdir}/out"
params.tmpdir = "${params.outdir}/gatk_temp"

// Define modules here
BWA = 'bwa/intel/0.7.17'
PICARD = 'picard/2.17.11'
GATK = 'gatk/4.1.9.0'
R = 'r/intel/4.0.3'
SAMTOOLS = 'samtools/intel/1.14/'
BAMTOOLS = 'bamtools/intel/2.5.1'
BCFTOOLS = 'bcftools/intel/1.14'
MULTIQC = 'multiqc/1.9'
TRIMMOMATIC = 'trimmomatic/0.36'

// Define Reference Here
REF = '/scratch/cb4097/Sequencing/Reference/*.fna'

// Alternative to setup the reference file
ref = file(params.ref)

// Print some stuff here
println "reads: $params.reads"
println "ref: $params.ref"
println "output: $params.out"
println "gatk temp dir: $params.tmpdir"


process trim {
// comments
        publishDir "${params.out}/trimmed", mode:'copy'

        input:
        tuple val(id),
                file(reads)

        output:
        tuple val(id),
                file(trimmed_file)

        script:
        trimmed_file = "${id}.trimmed.fq.gz"
        """
        module load $TRIMMOMATIC
        module load $GATK
        module load $BWA
        module load $PICARD

        java -jar /share/apps/trimmomatic/0.36/trimmomatic-0.36.jar SE -phred33 \
               $reads $trimmed_file ILLUMINACLIP:TruSeq3-SE:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36

        """
}


process align {
    publishDir "${params.out}/aligned_reads", mode:'copy'

    input:
    set pair_id,
        file(read_1) from trimmed_ch

    output:
    set val(pair_id), file("${pair_id}.aln-se.sam") \
        into aligned_reads_ch

    script:
    readGroup = \
        "@RG\\tID:${pair_id}\\tLB:${pair_id}\\tPL:ILLUMINA\\tPM:NOVASEQ\\tSM:${pair_id}"
    """
    module load $BWA
    bwa mem -Y -K 100000000 -R \"${readGroup}\" \
               $REF $read_1 > ${pair_id}.aln-se.sam
    """
}

process sort {
        // comments
        publishDir "${params.out}/sorted", mode:'copy'

        input:
        set pair_id,
            file(read_1) from aligned_reads_ch

        output:
        set val(pair_id), file("${pair_id}.aln-se.bam") \
                into sorted_ch

        script:

        """
        module load $GATK
        module load $BWA
        module load $PICARD

        java -jar $PICARD_JAR SortSam \
                  INPUT=$read_1 \
                  OUTPUT=${pair_id}.aln-se.bam \
                  SORT_ORDER=coordinate
        """
}

workflow {
    main:
        files_ch = Channel.fromPath( "${params.reads}" ).map{ [it.getBaseName(), it ] }
        files_ch.view()

        trim(files_ch) | set{ trimmed_ch }
}
