I found this list of options for bcftools view (an old version, which explained the -bvcg to me):

Usage: bcftools view [options] <in.bcf> [reg]

Input/output options:

       -A        keep all possible alternate alleles at variant sites
*      -b        output BCF instead of VCF
       -D FILE   sequence dictionary for VCF->BCF conversion [null]
       -F        PL generated by r921 or before (which generate old ordering)
       -G        suppress all individual genotype information
       -l FILE   list of sites (chr pos) or regions (BED) to output [all sites]
       -L        calculate LD for adjacent sites
       -N        skip sites where REF is not A/C/G/T
       -Q        output the QCALL likelihood format
       -s FILE   list of samples to use [all samples]
       -S        input is VCF
       -u        uncompressed BCF output (force -b)

Consensus/variant calling options:

*      -c        SNP calling (force -e)
       -d FLOAT  skip loci where less than FLOAT fraction of samples covered [0]
       -e        likelihood based analyses
*      -g        call genotypes at variant sites (force -c)
       -i FLOAT  indel-to-substitution ratio [-1]
       -I        skip indels
       -m FLOAT  alternative model for multiallelic and rare-variant calling, include if P(chi^2)>=FLOAT
       -p FLOAT  variant if P(ref|D)<FLOAT [0.5]
       -P STR    type of prior: full, cond2, flat [full]
       -t FLOAT  scaled substitution mutation rate [0.001]
       -T STR    constrained calling; STR can be: pair, trioauto, trioxd and trioxs (see manual) [null]
*      -v        output potential variant sites only (force -c)

NAOMI'S CODE:
samtools mpileup -I -uf $REF ${name}.sort.bam > ${name}.sort.bcf

bcftools mpileup -f $REF NZ_UnselectedA.sort > NZ__UnselectedA.sort.bcf

bcftools view -bvcg ${name}.sort.bcf | bcftools view - > /scratch/nz375/${name}.sort.snp

EXAMPLE CODE:
   bcftools mpileup -Ou -f reference.fa alignments.bam | bcftools call -mv -Ob -o calls.bcf

From man
-O, --output-type b|u|z|v
Output compressed BCF (b), uncompressed BCF (u), compressed VCF (z), uncompressed VCF (v). Use the -Ou option when piping between bcftools subcommands to speed up performance by removing unnecessary compression/decompression and VCF←→BCF conversion.

NEW CODE (in file CB_mpileup_call.q)
bcftool mpileup -Ou -f $REF NZ_UnselectedA.sort | bcftools call -cv --ploidy 1 -Ob -o NZ_UnselectedA.calls.bcf

#running it on its own maybe?
bcftools call -cv -ploidy 1 -Ob NZ__UnselectedA.sort.bcf -o NZ_UnselectedA.calls.bcf

#or maybe trying what Naomi did too?
bcftools call -cv -Ob -o NZ_UnselectedA.calls.bcf | bcftools call > NZ_UA_finalsnps

#WHAT ACTUALLY WORKED? (file NZ_Call_lol.q)
bcftools call -c --ploidy 1 NZ__UnselectedA.sort.bcf > NZ_UnselectedA.snps


________________________________________
PIPELINE


-rw-rw-r--. 1 cb4097 cb4097 550 Jan 17 10:19 NZ_Call_lol.q
-rw-rw-r--. 1 cb4097 cb4097 473 Jan 14 15:03 NZ_BCFmpileup.q
-rw-rw-r--. 1 cb4097 cb4097 274 Jan 14 14:45 NZ_SamtoolsIndex.q
-rw-rw-r--. 1 cb4097 cb4097 449 Jan 14 13:25 NZ_Samtoolsviewsort.q
-rw-rw-r--. 1 cb4097 cb4097 354 Jan 14 12:52 NZ_bwasamse.q
-rw-rw-r--. 1 cb4097 cb4097 339 Jan 13 17:31 NZ_Alignment.q

NZ_Alignment.q
NZ_bwasamse.q
NZ_Samtoolsviewsort.q
NZ_SamtoolsIndex.q
NZ_BCFmpileup.q
NZ_Call_lol.q